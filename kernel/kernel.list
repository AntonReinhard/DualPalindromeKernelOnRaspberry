
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea000069 	b	81ac <main>

Disassembly of section .text:

00008004 <IntDiv>:
    8004:	e92d0070 	push	{r4, r5, r6}
    8008:	e3530000 	cmp	r3, #0
    800c:	01a0f00e 	moveq	pc, lr
    8010:	e3a00000 	mov	r0, #0
    8014:	e16f5f12 	clz	r5, r2
    8018:	e16f6f13 	clz	r6, r3
    801c:	e3a04000 	mov	r4, #0
    8020:	e1550006 	cmp	r5, r6
    8024:	8a000001 	bhi	8030 <skip>
    8028:	e0464005 	sub	r4, r6, r5
    802c:	e1a03413 	lsl	r3, r3, r4

00008030 <skip>:
    8030:	e1a01002 	mov	r1, r2

00008034 <subtract>:
    8034:	e1530001 	cmp	r3, r1
    8038:	8a000001 	bhi	8044 <skip2>
    803c:	e0411003 	sub	r1, r1, r3
    8040:	e2800001 	add	r0, r0, #1

00008044 <skip2>:
    8044:	e3540000 	cmp	r4, #0
    8048:	0a000003 	beq	805c <end>
    804c:	e1a00080 	lsl	r0, r0, #1
    8050:	e1a030a3 	lsr	r3, r3, #1
    8054:	e2444001 	sub	r4, r4, #1
    8058:	eafffff5 	b	8034 <subtract>

0000805c <end>:
    805c:	e8bd0070 	pop	{r4, r5, r6}
    8060:	e1a0f00e 	mov	pc, lr

00008064 <BlinkDigit>:
    8064:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8068:	e3500009 	cmp	r0, #9
    806c:	849df004 	pophi	{pc}		; (ldrhi pc, [sp], #4)
    8070:	e0822100 	add	r2, r2, r0, lsl #2
    8074:	e5922000 	ldr	r2, [r2]
    8078:	e3a0301f 	mov	r3, #31

0000807c <loop>:
    807c:	e3a01001 	mov	r1, #1
    8080:	e1a01311 	lsl	r1, r1, r3
    8084:	e0011002 	and	r1, r1, r2
    8088:	e92d000c 	push	{r2, r3}
    808c:	e3a0002f 	mov	r0, #47	; 0x2f
    8090:	eb000035 	bl	816c <SetGpio>
    8094:	e59f0074 	ldr	r0, [pc, #116]	; 8110 <blinkDigits+0x24>
    8098:	eb00019c 	bl	8710 <WaitMicroSec>
    809c:	e8bd000c 	pop	{r2, r3}
    80a0:	e3530000 	cmp	r3, #0
    80a4:	0a000001 	beq	80b0 <end>
    80a8:	e2433001 	sub	r3, r3, #1
    80ac:	eafffff2 	b	807c <loop>

000080b0 <end>:
    80b0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000080b4 <BlinkSingleRegister>:
    80b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    80b8:	e92d0070 	push	{r4, r5, r6}
    80bc:	e1a02000 	mov	r2, r0
    80c0:	e3a00000 	mov	r0, #0
    80c4:	e3a0300a 	mov	r3, #10

000080c8 <cumulateDigits>:
    80c8:	e2800001 	add	r0, r0, #1
    80cc:	e92d0009 	push	{r0, r3}
    80d0:	ebffffcb 	bl	8004 <IntDiv>
    80d4:	e1a02000 	mov	r2, r0
    80d8:	e8bd0009 	pop	{r0, r3}
    80dc:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
    80e0:	e3520000 	cmp	r2, #0
    80e4:	1afffff7 	bne	80c8 <cumulateDigits>
    80e8:	e1a02000 	mov	r2, r0

000080ec <blinkDigits>:
    80ec:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    80f0:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
    80f4:	ebffffda 	bl	8064 <BlinkDigit>
    80f8:	e49d2004 	pop	{r2}		; (ldr r2, [sp], #4)
    80fc:	e2422001 	sub	r2, r2, #1
    8100:	e3520000 	cmp	r2, #0
    8104:	1afffff8 	bne	80ec <blinkDigits>
    8108:	e8bd0070 	pop	{r4, r5, r6}
    810c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8110:	0003d090 	.word	0x0003d090

00008114 <GetGpioAddress>:
    8114:	e59f008c 	ldr	r0, [pc, #140]	; 81a8 <SetGpio+0x3c>
    8118:	e1a0f00e 	mov	pc, lr

0000811c <SetGpioFunction>:
    811c:	e3500035 	cmp	r0, #53	; 0x35
    8120:	93510007 	cmpls	r1, #7
    8124:	81a0f00e 	movhi	pc, lr
    8128:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    812c:	e1a02000 	mov	r2, r0
    8130:	ebfffff7 	bl	8114 <GetGpioAddress>

00008134 <functionLoop$>:
    8134:	e3520009 	cmp	r2, #9
    8138:	8242200a 	subhi	r2, r2, #10
    813c:	82800004 	addhi	r0, r0, #4
    8140:	8afffffb 	bhi	8134 <functionLoop$>
    8144:	e0822082 	add	r2, r2, r2, lsl #1
    8148:	e1a01211 	lsl	r1, r1, r2
    814c:	e3a03007 	mov	r3, #7
    8150:	e1a03213 	lsl	r3, r3, r2
    8154:	e1e03003 	mvn	r3, r3
    8158:	e5902000 	ldr	r2, [r0]
    815c:	e0022003 	and	r2, r2, r3
    8160:	e1811002 	orr	r1, r1, r2
    8164:	e5801000 	str	r1, [r0]
    8168:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000816c <SetGpio>:
    816c:	e3500035 	cmp	r0, #53	; 0x35
    8170:	81a0f00e 	movhi	pc, lr
    8174:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8178:	e1a02000 	mov	r2, r0
    817c:	ebffffe4 	bl	8114 <GetGpioAddress>
    8180:	e1a032a2 	lsr	r3, r2, #5
    8184:	e1a03103 	lsl	r3, r3, #2
    8188:	e0800003 	add	r0, r0, r3
    818c:	e202201f 	and	r2, r2, #31
    8190:	e3a03001 	mov	r3, #1
    8194:	e1a03213 	lsl	r3, r3, r2
    8198:	e3310000 	teq	r1, #0
    819c:	05803028 	streq	r3, [r0, #40]	; 0x28
    81a0:	1580301c 	strne	r3, [r0, #28]
    81a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    81a8:	20200000 	.word	0x20200000

000081ac <main>:
    81ac:	e3a0d902 	mov	sp, #32768	; 0x8000
    81b0:	e3a0002f 	mov	r0, #47	; 0x2f
    81b4:	e3a01001 	mov	r1, #1
    81b8:	ebffffd7 	bl	811c <SetGpioFunction>
    81bc:	eb0000e2 	bl	854c <InitMatrix>
    81c0:	e3a0002f 	mov	r0, #47	; 0x2f
    81c4:	e3a01001 	mov	r1, #1
    81c8:	ebffffe7 	bl	816c <SetGpio>

000081cc <infloop>:
    81cc:	e59f0014 	ldr	r0, [pc, #20]	; 81e8 <infloop+0x1c>
    81d0:	e3a0107d 	mov	r1, #125	; 0x7d
    81d4:	eb000004 	bl	81ec <SlideNumber>
    81d8:	e3a0002a 	mov	r0, #42	; 0x2a
    81dc:	e3a0107d 	mov	r1, #125	; 0x7d
    81e0:	eb000001 	bl	81ec <SlideNumber>
    81e4:	eafffff8 	b	81cc <infloop>
    81e8:	00000539 	.word	0x00000539

000081ec <SlideNumber>:
    81ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    81f0:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    81f4:	e1a04001 	mov	r4, r1
    81f8:	e1a02000 	mov	r2, r0
    81fc:	e3a00000 	mov	r0, #0
    8200:	e3a0300a 	mov	r3, #10
    8204:	e3a0100b 	mov	r1, #11
    8208:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)

0000820c <cumulateDigits>:
    820c:	e2800001 	add	r0, r0, #1
    8210:	e92d0009 	push	{r0, r3}
    8214:	ebffff7a 	bl	8004 <IntDiv>
    8218:	e1a02000 	mov	r2, r0
    821c:	e8bd0009 	pop	{r0, r3}
    8220:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
    8224:	e3520000 	cmp	r2, #0
    8228:	1afffff7 	bne	820c <cumulateDigits>
    822c:	e3a0100b 	mov	r1, #11
    8230:	e2800001 	add	r0, r0, #1
    8234:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
    8238:	e1a03000 	mov	r3, r0
    823c:	e49d1004 	pop	{r1}		; (ldr r1, [sp], #4)

00008240 <displayDigits>:
    8240:	e1a00001 	mov	r0, r1
    8244:	e49d1004 	pop	{r1}		; (ldr r1, [sp], #4)
    8248:	e1a02004 	mov	r2, r4
    824c:	e92d000a 	push	{r1, r3}
    8250:	eb000081 	bl	845c <SlideLeft>
    8254:	e8bd000a 	pop	{r1, r3}
    8258:	e2433001 	sub	r3, r3, #1
    825c:	e3530000 	cmp	r3, #0
    8260:	1afffff6 	bne	8240 <displayDigits>
    8264:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    8268:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000826c <DisplayDoubleRegister>:
    826c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8270:	e92d0030 	push	{r4, r5}
    8274:	e3e03000 	mvn	r3, #0
    8278:	e0200003 	eor	r0, r0, r3
    827c:	e0211003 	eor	r1, r1, r3
    8280:	e1a021a2 	lsr	r2, r2, #3

00008284 <TimedLoop>:
    8284:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
    8288:	e3a02004 	mov	r2, #4
    828c:	e59f53b0 	ldr	r5, [pc, #944]	; 8644 <TurnOffMatrix+0xc8>

00008290 <RegisterZeroLoop>:
    8290:	e2422001 	sub	r2, r2, #1
    8294:	e3a030ff 	mov	r3, #255	; 0xff
    8298:	e1a04182 	lsl	r4, r2, #3
    829c:	e1a03413 	lsl	r3, r3, r4
    82a0:	e0003003 	and	r3, r0, r3
    82a4:	e1a03433 	lsr	r3, r3, r4
    82a8:	e1a04003 	mov	r4, r3
    82ac:	e92d000f 	push	{r0, r1, r2, r3}
    82b0:	e2041001 	and	r1, r4, #1
    82b4:	e1a040a4 	lsr	r4, r4, #1
    82b8:	e3a00009 	mov	r0, #9
    82bc:	ebffffaa 	bl	816c <SetGpio>
    82c0:	e2041001 	and	r1, r4, #1
    82c4:	e1a040a4 	lsr	r4, r4, #1
    82c8:	e3a00008 	mov	r0, #8
    82cc:	ebffffa6 	bl	816c <SetGpio>
    82d0:	e2041001 	and	r1, r4, #1
    82d4:	e1a040a4 	lsr	r4, r4, #1
    82d8:	e3a00006 	mov	r0, #6
    82dc:	ebffffa2 	bl	816c <SetGpio>
    82e0:	e2041001 	and	r1, r4, #1
    82e4:	e1a040a4 	lsr	r4, r4, #1
    82e8:	e3a00004 	mov	r0, #4
    82ec:	ebffff9e 	bl	816c <SetGpio>
    82f0:	e2041001 	and	r1, r4, #1
    82f4:	e1a040a4 	lsr	r4, r4, #1
    82f8:	e3a00005 	mov	r0, #5
    82fc:	ebffff9a 	bl	816c <SetGpio>
    8300:	e2041001 	and	r1, r4, #1
    8304:	e1a040a4 	lsr	r4, r4, #1
    8308:	e3a00003 	mov	r0, #3
    830c:	ebffff96 	bl	816c <SetGpio>
    8310:	e2041001 	and	r1, r4, #1
    8314:	e1a040a4 	lsr	r4, r4, #1
    8318:	e3a00002 	mov	r0, #2
    831c:	ebffff92 	bl	816c <SetGpio>
    8320:	e2041001 	and	r1, r4, #1
    8324:	e1a040a4 	lsr	r4, r4, #1
    8328:	e3a00007 	mov	r0, #7
    832c:	ebffff8e 	bl	816c <SetGpio>
    8330:	e20500ff 	and	r0, r5, #255	; 0xff
    8334:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    8338:	e1a05425 	lsr	r5, r5, #8
    833c:	e3a01001 	mov	r1, #1
    8340:	ebffff89 	bl	816c <SetGpio>
    8344:	e3a00ffa 	mov	r0, #1000	; 0x3e8
    8348:	eb0000f0 	bl	8710 <WaitMicroSec>
    834c:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    8350:	e3a01000 	mov	r1, #0
    8354:	ebffff84 	bl	816c <SetGpio>
    8358:	e8bd000f 	pop	{r0, r1, r2, r3}
    835c:	e3520000 	cmp	r2, #0
    8360:	1affffca 	bne	8290 <RegisterZeroLoop>
    8364:	e3a02004 	mov	r2, #4
    8368:	e59f52d8 	ldr	r5, [pc, #728]	; 8648 <TurnOffMatrix+0xcc>

0000836c <RegisterOneLoop>:
    836c:	e2422001 	sub	r2, r2, #1
    8370:	e3a030ff 	mov	r3, #255	; 0xff
    8374:	e1a04182 	lsl	r4, r2, #3
    8378:	e1a03413 	lsl	r3, r3, r4
    837c:	e0013003 	and	r3, r1, r3
    8380:	e1a03433 	lsr	r3, r3, r4
    8384:	e1a04003 	mov	r4, r3
    8388:	e92d000f 	push	{r0, r1, r2, r3}
    838c:	e2041001 	and	r1, r4, #1
    8390:	e1a040a4 	lsr	r4, r4, #1
    8394:	e3a00009 	mov	r0, #9
    8398:	ebffff73 	bl	816c <SetGpio>
    839c:	e2041001 	and	r1, r4, #1
    83a0:	e1a040a4 	lsr	r4, r4, #1
    83a4:	e3a00008 	mov	r0, #8
    83a8:	ebffff6f 	bl	816c <SetGpio>
    83ac:	e2041001 	and	r1, r4, #1
    83b0:	e1a040a4 	lsr	r4, r4, #1
    83b4:	e3a00006 	mov	r0, #6
    83b8:	ebffff6b 	bl	816c <SetGpio>
    83bc:	e2041001 	and	r1, r4, #1
    83c0:	e1a040a4 	lsr	r4, r4, #1
    83c4:	e3a00004 	mov	r0, #4
    83c8:	ebffff67 	bl	816c <SetGpio>
    83cc:	e2041001 	and	r1, r4, #1
    83d0:	e1a040a4 	lsr	r4, r4, #1
    83d4:	e3a00005 	mov	r0, #5
    83d8:	ebffff63 	bl	816c <SetGpio>
    83dc:	e2041001 	and	r1, r4, #1
    83e0:	e1a040a4 	lsr	r4, r4, #1
    83e4:	e3a00003 	mov	r0, #3
    83e8:	ebffff5f 	bl	816c <SetGpio>
    83ec:	e2041001 	and	r1, r4, #1
    83f0:	e1a040a4 	lsr	r4, r4, #1
    83f4:	e3a00002 	mov	r0, #2
    83f8:	ebffff5b 	bl	816c <SetGpio>
    83fc:	e2041001 	and	r1, r4, #1
    8400:	e1a040a4 	lsr	r4, r4, #1
    8404:	e3a00007 	mov	r0, #7
    8408:	ebffff57 	bl	816c <SetGpio>
    840c:	e20500ff 	and	r0, r5, #255	; 0xff
    8410:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    8414:	e1a05425 	lsr	r5, r5, #8
    8418:	e3a01001 	mov	r1, #1
    841c:	ebffff52 	bl	816c <SetGpio>
    8420:	e3a00ffa 	mov	r0, #1000	; 0x3e8
    8424:	eb0000b9 	bl	8710 <WaitMicroSec>
    8428:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    842c:	e3a01000 	mov	r1, #0
    8430:	ebffff4d 	bl	816c <SetGpio>
    8434:	e8bd000f 	pop	{r0, r1, r2, r3}
    8438:	e3520000 	cmp	r2, #0
    843c:	1affffca 	bne	836c <RegisterOneLoop>
    8440:	e49d2004 	pop	{r2}		; (ldr r2, [sp], #4)
    8444:	e2422001 	sub	r2, r2, #1
    8448:	e3520000 	cmp	r2, #0
    844c:	1affff8c 	bne	8284 <TimedLoop>
    8450:	e8bd0030 	pop	{r4, r5}
    8454:	eb000048 	bl	857c <TurnOffMatrix>
    8458:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000845c <SlideLeft>:
    845c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8460:	e350000b 	cmp	r0, #11
    8464:	849df004 	pophi	{pc}		; (ldrhi pc, [sp], #4)
    8468:	e351000b 	cmp	r1, #11
    846c:	849df004 	pophi	{pc}		; (ldrhi pc, [sp], #4)
    8470:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    8474:	e1a00180 	lsl	r0, r0, #3
    8478:	e1a01181 	lsl	r1, r1, #3
    847c:	e59f31c8 	ldr	r3, [pc, #456]	; 864c <TurnOffMatrix+0xd0>
    8480:	e0800003 	add	r0, r0, r3
    8484:	e0811003 	add	r1, r1, r3
    8488:	e5904000 	ldr	r4, [r0]
    848c:	e5916000 	ldr	r6, [r1]
    8490:	e2800004 	add	r0, r0, #4
    8494:	e2811004 	add	r1, r1, #4
    8498:	e5905000 	ldr	r5, [r0]
    849c:	e5917000 	ldr	r7, [r1]
    84a0:	e3e08000 	mvn	r8, #0
    84a4:	e3a09000 	mov	r9, #0
    84a8:	e3a03000 	mov	r3, #0

000084ac <looping>:
    84ac:	e1a00006 	mov	r0, r6
    84b0:	e3a0a008 	mov	sl, #8
    84b4:	e04aa003 	sub	sl, sl, r3
    84b8:	e1a00a30 	lsr	r0, r0, sl
    84bc:	e0000009 	and	r0, r0, r9
    84c0:	e0044008 	and	r4, r4, r8
    84c4:	e0800004 	add	r0, r0, r4
    84c8:	e1a01007 	mov	r1, r7
    84cc:	e1a01a31 	lsr	r1, r1, sl
    84d0:	e0011009 	and	r1, r1, r9
    84d4:	e0055008 	and	r5, r5, r8
    84d8:	e0811005 	add	r1, r1, r5
    84dc:	e92d000c 	push	{r2, r3}
    84e0:	ebffff61 	bl	826c <DisplayDoubleRegister>
    84e4:	e8bd000c 	pop	{r2, r3}
    84e8:	e1a09089 	lsl	r9, r9, #1
    84ec:	e59fa15c 	ldr	sl, [pc, #348]	; 8650 <TurnOffMatrix+0xd4>
    84f0:	e089900a 	add	r9, r9, sl
    84f4:	e3e0a000 	mvn	sl, #0
    84f8:	e029800a 	eor	r8, r9, sl
    84fc:	e1a04084 	lsl	r4, r4, #1
    8500:	e1a05085 	lsl	r5, r5, #1
    8504:	e2833001 	add	r3, r3, #1
    8508:	e3530008 	cmp	r3, #8
    850c:	1affffe6 	bne	84ac <looping>
    8510:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    8514:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008518 <MatrixDigit>:
    8518:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    851c:	e350000a 	cmp	r0, #10
    8520:	849df004 	pophi	{pc}		; (ldrhi pc, [sp], #4)
    8524:	e1a01000 	mov	r1, r0
    8528:	e1a01181 	lsl	r1, r1, #3
    852c:	e59f3118 	ldr	r3, [pc, #280]	; 864c <TurnOffMatrix+0xd0>
    8530:	e0811003 	add	r1, r1, r3
    8534:	e5910000 	ldr	r0, [r1]
    8538:	e2811004 	add	r1, r1, #4
    853c:	e5911000 	ldr	r1, [r1]
    8540:	e3a02ffa 	mov	r2, #1000	; 0x3e8
    8544:	ebffff48 	bl	826c <DisplayDoubleRegister>
    8548:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000854c <InitMatrix>:
    854c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8550:	e3a02002 	mov	r2, #2

00008554 <forloop>:
    8554:	e1a00002 	mov	r0, r2
    8558:	e3a01001 	mov	r1, #1
    855c:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
    8560:	ebfffeed 	bl	811c <SetGpioFunction>
    8564:	e49d2004 	pop	{r2}		; (ldr r2, [sp], #4)
    8568:	e2822001 	add	r2, r2, #1
    856c:	e3520012 	cmp	r2, #18
    8570:	1afffff7 	bne	8554 <forloop>
    8574:	eb000000 	bl	857c <TurnOffMatrix>
    8578:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000857c <TurnOffMatrix>:
    857c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8580:	e3a00002 	mov	r0, #2
    8584:	e3a01001 	mov	r1, #1
    8588:	ebfffef7 	bl	816c <SetGpio>
    858c:	e3a00003 	mov	r0, #3
    8590:	e3a01001 	mov	r1, #1
    8594:	ebfffef4 	bl	816c <SetGpio>
    8598:	e3a00004 	mov	r0, #4
    859c:	e3a01001 	mov	r1, #1
    85a0:	ebfffef1 	bl	816c <SetGpio>
    85a4:	e3a00005 	mov	r0, #5
    85a8:	e3a01001 	mov	r1, #1
    85ac:	ebfffeee 	bl	816c <SetGpio>
    85b0:	e3a00006 	mov	r0, #6
    85b4:	e3a01001 	mov	r1, #1
    85b8:	ebfffeeb 	bl	816c <SetGpio>
    85bc:	e3a00007 	mov	r0, #7
    85c0:	e3a01001 	mov	r1, #1
    85c4:	ebfffee8 	bl	816c <SetGpio>
    85c8:	e3a00008 	mov	r0, #8
    85cc:	e3a01001 	mov	r1, #1
    85d0:	ebfffee5 	bl	816c <SetGpio>
    85d4:	e3a00009 	mov	r0, #9
    85d8:	e3a01001 	mov	r1, #1
    85dc:	ebfffee2 	bl	816c <SetGpio>
    85e0:	e3a0000a 	mov	r0, #10
    85e4:	e3a01000 	mov	r1, #0
    85e8:	ebfffedf 	bl	816c <SetGpio>
    85ec:	e3a0000b 	mov	r0, #11
    85f0:	e3a01000 	mov	r1, #0
    85f4:	ebfffedc 	bl	816c <SetGpio>
    85f8:	e3a0000c 	mov	r0, #12
    85fc:	e3a01000 	mov	r1, #0
    8600:	ebfffed9 	bl	816c <SetGpio>
    8604:	e3a0000d 	mov	r0, #13
    8608:	e3a01000 	mov	r1, #0
    860c:	ebfffed6 	bl	816c <SetGpio>
    8610:	e3a0000e 	mov	r0, #14
    8614:	e3a01000 	mov	r1, #0
    8618:	ebfffed3 	bl	816c <SetGpio>
    861c:	e3a0000f 	mov	r0, #15
    8620:	e3a01000 	mov	r1, #0
    8624:	ebfffed0 	bl	816c <SetGpio>
    8628:	e3a00010 	mov	r0, #16
    862c:	e3a01000 	mov	r1, #0
    8630:	ebfffecd 	bl	816c <SetGpio>
    8634:	e3a00011 	mov	r0, #17
    8638:	e3a01000 	mov	r1, #0
    863c:	ebfffeca 	bl	816c <SetGpio>
    8640:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8644:	100e110f 	.word	0x100e110f
    8648:	0c0b0d0a 	.word	0x0c0b0d0a
    864c:	00008764 	.word	0x00008764
    8650:	01010101 	.word	0x01010101

00008654 <initPowersOfThree>:
    8654:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8658:	e3a02001 	mov	r2, #1
    865c:	e8800004 	stm	r0, {r2}
    8660:	e2800004 	add	r0, r0, #4
    8664:	e3a0300f 	mov	r3, #15

00008668 <putZeroes>:
    8668:	e3a02000 	mov	r2, #0
    866c:	e8800004 	stm	r0, {r2}
    8670:	e2800004 	add	r0, r0, #4
    8674:	e2433001 	sub	r3, r3, #1
    8678:	e3530000 	cmp	r3, #0
    867c:	1afffff9 	bne	8668 <putZeroes>
    8680:	e3a030ff 	mov	r3, #255	; 0xff

00008684 <bigloop>:
    8684:	e2433001 	sub	r3, r3, #1
    8688:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    868c:	e3a03010 	mov	r3, #16
    8690:	e3a01000 	mov	r1, #0

00008694 <smallloop>:
    8694:	e2433001 	sub	r3, r3, #1
    8698:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    869c:	e3a03000 	mov	r3, #0
    86a0:	e2400040 	sub	r0, r0, #64	; 0x40
    86a4:	e5902000 	ldr	r2, [r0]
    86a8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    86ac:	e1a00002 	mov	r0, r2
    86b0:	e0922002 	adds	r2, r2, r2
    86b4:	e2a33000 	adc	r3, r3, #0
    86b8:	e0902002 	adds	r2, r0, r2
    86bc:	e2a33000 	adc	r3, r3, #0
    86c0:	e0912002 	adds	r2, r1, r2
    86c4:	e2a33000 	adc	r3, r3, #0
    86c8:	e1a01003 	mov	r1, r3
    86cc:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    86d0:	e2800040 	add	r0, r0, #64	; 0x40
    86d4:	e8800004 	stm	r0, {r2}
    86d8:	e2800004 	add	r0, r0, #4
    86dc:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
    86e0:	e3530000 	cmp	r3, #0
    86e4:	1affffea 	bne	8694 <smallloop>
    86e8:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
    86ec:	e3530000 	cmp	r3, #0
    86f0:	1affffe3 	bne	8684 <bigloop>
    86f4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000086f8 <GetSystemTimerBase>:
    86f8:	e59f0034 	ldr	r0, [pc, #52]	; 8734 <loop+0x14>
    86fc:	e1a0f00e 	mov	pc, lr

00008700 <GetTimeStamp>:
    8700:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8704:	ebfffffb 	bl	86f8 <GetSystemTimerBase>
    8708:	e1c000d4 	ldrd	r0, [r0, #4]
    870c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008710 <WaitMicroSec>:
    8710:	e1a02000 	mov	r2, r0
    8714:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8718:	ebfffff8 	bl	8700 <GetTimeStamp>
    871c:	e1a03000 	mov	r3, r0

00008720 <loop>:
    8720:	ebfffff6 	bl	8700 <GetTimeStamp>
    8724:	e0401003 	sub	r1, r0, r3
    8728:	e1510002 	cmp	r1, r2
    872c:	9afffffb 	bls	8720 <loop>
    8730:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8734:	20003000 	.word	0x20003000
